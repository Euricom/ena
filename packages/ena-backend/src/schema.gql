# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  bankAccountNumber: String!
  costCenter: Int!
  vendorAccount: Int!
  active: Boolean!
  expenses: [Expense]!
  statuses: [Status]!
  roles: [Role!]!
}

enum Role {
  USER
  VALIDATOR
  APPROVER
}

type Status {
  id: ID!
  createdAt: DateTime!
  reason: String!
  expense: Expense!
  type: StatusType!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum StatusType {
  SUBMITTED
  VALIDATED
  REJECTED
  APPROVED
  REIMBURSED
}

type Category {
  id: ID!
  name: String!
  generalLedgerAccount: Int!
  active: Boolean!
  expenses: [Expense]!
}

type Expense {
  id: ID!
  date: DateTime!
  amount: Float!
  currency: Currency!
  exchangeRate: Float!
  reason: String!
  statuses: [Status]!
  latestStatus: Status!
  category: Category!
  user: User!
}

enum Currency {
  AFN
  EUR
  ALL
  DZD
  USD
  AOA
  XCD
  ARS
  AMD
  AWG
  AUD
  AZN
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  XOF
  BMD
  INR
  BTN
  BOB
  BOV
  BAM
  BWP
  NOK
  BRL
  BND
  BGN
  BIF
  CVE
  KHR
}

type Query {
  users: [User]!
  user(id: ID!): User!
  categories: [Category]!
  category(id: ID!): Category!
  expenses: [Expense]!
  expense(id: ID!): Expense!
  statuses: [Status]!
  status(id: ID!): Status!
  statusesByType(onlyIfLatest: Boolean = false, type: StatusType!): [Status]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!): User!
  deleteUser(id: ID!): ID!
  restoreUser(id: ID!): User!
  createCategory(data: CreateCategoryInput!): Category!
  updateCategory(data: UpdateCategoryInput!): Category!
  deleteCategory(id: ID!): ID!
  restoreCategory(id: ID!): Category!
  createExpense(data: CreateExpenseInput!): Expense!
  updateExpense(data: UpdateExpenseInput!): Expense!
  createStatus(data: CreateStatusInput!): Status!
  updateStatus(data: UpdateStatusInput!): Status!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  bankAccountNumber: String!
  costCenter: Int!
  vendorAccount: Int!
  roles: [Role]
  active: Boolean
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  bankAccountNumber: String
  costCenter: Int
  vendorAccount: Int
  roles: [Role!]
  active: Boolean
  id: ID!
}

input CreateCategoryInput {
  name: String!
  generalLedgerAccount: Int!
  active: Boolean
}

input UpdateCategoryInput {
  name: String
  generalLedgerAccount: Int
  active: Boolean
  id: ID!
}

input CreateExpenseInput {
  date: DateTime!
  amount: Float!
  currency: Currency
  exchangeRate: Float
  reason: String
  categoryId: ID!
  userId: ID!
}

input UpdateExpenseInput {
  date: DateTime
  amount: Float
  currency: Currency
  exchangeRate: Float
  reason: String
  categoryId: ID
  userId: ID
  id: ID!
}

input CreateStatusInput {
  reason: String
  expenseId: ID!
  type: StatusType
  userId: ID!
}

input UpdateStatusInput {
  reason: String
  expenseId: ID
  type: StatusType
  userId: ID
  id: ID!
}
